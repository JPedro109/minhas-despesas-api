import {
    createUserController,
    deleteUserController,
    recoverUserPasswordController,
    refreshUserTokenController,
    sendUserEmailUpdateLinkController,
    sendUserPasswordRecoveryLinkController,
    updateUserEmailController,
    updateUserPasswordController,
    updateUsernameController,
    userLoginController,
    verifyUserEmailController,
    executeChargeToExpiredSubscriptionsController,
    getUserSubscriptionController,
    manageSubscriptionRenewalController,
    sendNotificationOfSubscriptionThatAreComingDueController,
    updateSubscriptionController,
    updateSubscriptionRenewalStatusController,
    setFreePlanForNonRenewableSubscriptionsController,
    getPlansController,
    getUserPlanController,
    createPaymentMethodController,
    deletePaymentMethodController,
    getUserPaymentMethodController,
    updatePaymentMethodNameController,
    updatePaymentMethodTokenController,
    createExtractController,
    deleteExpiredExtractsController,
    getUserExtractsController,
    createExpenseController,
    deleteExpenseController,
    expenseUndoPaymentController,
    getUserExpensesController,
    payExpenseController,
    sendNotificationOfExpensesThatAreComingDueController,
    updateExpenseController,
    updatePreviousMonthPaidExpensesToUnpaidController,
    authenticationUserMiddleware,
    basicAuthenticationMiddleware,
} from "@/main/factories";

import { Router } from "express";
import { RestAdapter } from "@/main/rest";

export default (router: Router): void => {
    router.post(
        "/users",
        RestAdapter.route(createUserController)
    );
    router.patch(
        "/users/verify-email",
        RestAdapter.route(verifyUserEmailController)
    );
    router.post(
        "/users/login",
        RestAdapter.route(userLoginController)
    );
    router.patch(
        "/users/refresh-token",
        RestAdapter.route(refreshUserTokenController)
    );
    router.delete(
        "/users",
        RestAdapter.middleware(authenticationUserMiddleware),
        RestAdapter.route(deleteUserController)
    );
    router.post(
        "/users/send-email-update-link",
        RestAdapter.middleware(authenticationUserMiddleware),
        RestAdapter.route(sendUserEmailUpdateLinkController)
    );
    router.post(
        "/users/send-password-recovery-link",
        RestAdapter.route(sendUserPasswordRecoveryLinkController)
    );
    router.patch(
        "/users/email",
        RestAdapter.middleware(authenticationUserMiddleware),
        RestAdapter.route(updateUserEmailController)
    );
    router.patch(
        "/users/username",
        RestAdapter.middleware(authenticationUserMiddleware),
        RestAdapter.route(updateUsernameController)
    );
    router.patch(
        "/users/password-recover",
        RestAdapter.route(recoverUserPasswordController)
    );
    router.patch(
        "/users/password",
        RestAdapter.middleware(authenticationUserMiddleware),
        RestAdapter.route(updateUserPasswordController)
    );

    
    router.post(
        "/subscriptions/charge-expired",
        RestAdapter.middleware(basicAuthenticationMiddleware),
        RestAdapter.route(executeChargeToExpiredSubscriptionsController)
    );
    router.get(
        "/subscriptions",
        RestAdapter.middleware(authenticationUserMiddleware),
        RestAdapter.route(getUserSubscriptionController)
    );
    router.post(
        "/subscriptions/renew",
        RestAdapter.middleware(authenticationUserMiddleware),
        RestAdapter.route(manageSubscriptionRenewalController)
    );
    router.post(
        "/subscriptions/notify-due",
        RestAdapter.middleware(basicAuthenticationMiddleware),
        RestAdapter.route(sendNotificationOfSubscriptionThatAreComingDueController)
    );
    router.patch(
        "/subscriptions",
        RestAdapter.middleware(authenticationUserMiddleware),
        RestAdapter.route(updateSubscriptionController)
    );
    router.patch(
        "/subscriptions/renewal-status",
        RestAdapter.middleware(authenticationUserMiddleware),
        RestAdapter.route(updateSubscriptionRenewalStatusController)
    );
    router.post(
        "/subscriptions/set-free-plan",
        RestAdapter.middleware(basicAuthenticationMiddleware),
        RestAdapter.route(setFreePlanForNonRenewableSubscriptionsController)
    );


    router.get(
        "/plans",
        RestAdapter.middleware(authenticationUserMiddleware),
        RestAdapter.route(getPlansController)
    );
    router.get(
        "/plans/user",
        RestAdapter.middleware(authenticationUserMiddleware),
        RestAdapter.route(getUserPlanController)
    );


    router.post(
        "/payment-methods",
        RestAdapter.middleware(authenticationUserMiddleware),
        RestAdapter.route(createPaymentMethodController)
    );
    router.delete(
        "/payment-methods",
        RestAdapter.middleware(authenticationUserMiddleware),
        RestAdapter.route(deletePaymentMethodController)
    );
    router.get(
        "/payment-methods",
        RestAdapter.middleware(authenticationUserMiddleware),
        RestAdapter.route(getUserPaymentMethodController)
    );
    router.patch(
        "/payment-methods/name",
        RestAdapter.middleware(authenticationUserMiddleware),
        RestAdapter.route(updatePaymentMethodNameController)
    );
    router.patch(
        "/payment-methods/token",
        RestAdapter.middleware(authenticationUserMiddleware),
        RestAdapter.route(updatePaymentMethodTokenController)
    );


    router.post(
        "/extracts",
        RestAdapter.middleware(authenticationUserMiddleware),
        RestAdapter.route(createExtractController)
    );
    router.delete(
        "/extracts/expired",
        RestAdapter.route(deleteExpiredExtractsController)
    );
    router.get(
        "/extracts",
        RestAdapter.middleware(authenticationUserMiddleware),
        RestAdapter.route(getUserExtractsController)
    );

    
    router.post(
        "/expenses",
        RestAdapter.middleware(authenticationUserMiddleware),
        RestAdapter.route(createExpenseController)
    );
    router.delete(
        "/expenses",
        RestAdapter.middleware(authenticationUserMiddleware),
        RestAdapter.route(deleteExpenseController)
    );
    router.patch(
        "/expenses/undo-payment",
        RestAdapter.middleware(authenticationUserMiddleware),
        RestAdapter.route(expenseUndoPaymentController)
    );
    router.get(
        "/expenses",
        RestAdapter.middleware(authenticationUserMiddleware),
        RestAdapter.route(getUserExpensesController)
    );
    router.patch(
        "/expenses/pay",
        RestAdapter.middleware(authenticationUserMiddleware),
        RestAdapter.route(payExpenseController)
    );
    router.post(
        "/expenses/notify-due",
        RestAdapter.middleware(basicAuthenticationMiddleware),
        RestAdapter.route(sendNotificationOfExpensesThatAreComingDueController)
    );
    router.patch(
        "/expenses",
        RestAdapter.middleware(authenticationUserMiddleware),
        RestAdapter.route(updateExpenseController)
    );
    router.post(
        "/expenses/update-unpaid",
        RestAdapter.middleware(basicAuthenticationMiddleware),
        RestAdapter.route(updatePreviousMonthPaidExpensesToUnpaidController)
    );
};